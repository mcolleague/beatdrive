datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
// model UserExample {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
// }

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  tags      Tag[]
  tracks    Track[]
  playlists Playlist[]
  folders   Folder[]
}

model Tag {
  id        Int      @id @default(autoincrement())
  title     String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tracks    Track[]
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Track {
  id        Int        @id @default(autoincrement())
  title     String
  artist    String
  duration  Int
  desc      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  tags      Tag[]
  playlists Playlist[]
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
}

model Playlist {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tracks    Track[]
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  Folder    Folder?  @relation(fields: [folderId], references: [id])
  folderId  Int?
}

model Folder {
  id        Int        @id @default(autoincrement())
  title     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  playlists Playlist[]
  User      User       @relation(fields: [userId], references: [id])
  userId    Int
}
